#! /bin/bash
### BEGIN INIT INFO
# Provides:          shadowsocks-libev
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: lightweight secured socks5 proxy
# Description:       Shadowsocks-libev is a lightweight secured
#                    socks5 proxy for embedded devices and low end boxes.
### END INIT INFO

# Author: Wave WorkShop <waveworkshop@outlook.com>

# PATH should only include /usr/ if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
DESC=shadowsocks-libev            # Introduce a short description here
NAME=shadowsocks-libev            # Introduce the short server's name here
CONF=/etc/shadowsocks-libev.json  # Introduce the server's config file
DAEMON=/usr/local/bin/ss-server   # Introduce the server's location here
DAEMON_ARGS=" "                   # Arguments to run the daemon with
BIN=/usr/local/bin/obfs-server    # Introduce the obfs's location here
RETVAL=0                          # RETVAL Mark
PID_DIR=/var/run
PID_FILE=$PID_DIR/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the shadowsocks is not installed
[ -x $DAEMON ] || [ -x $BIN ] || exit 0

# Echo color
RED="\033[31;1m"
GREEN="\033[32;1m"
YELLOW="\033[33;1m"
BLUE="\033[34;1m"
PLAIN="\033[0m"

# Info messages
DONE="${GREEN}[DONE]${PLAIN}"
FAIL="${RED}[FAIL]${PLAIN}"
ERROR="${RED}[ERROR]${PLAIN}"
WARNING="${YELLOW}[WARNING]${PLAIN}"
RUNNING="${BLUE}[RUNNING]${PLAIN}"

# CHECK PID_FILE
if [ ! -d $PID_DIR ]; then
    mkdir -p $PID_DIR
    if [ $? -ne 0 ]; then
        echo -e "${ERROR} PID File can ${RED}not${PLAIN} created"
        exit 1
    fi
fi

# CHECK CONF_FILE
if [ ! -f $CONF ]; then
    echo -e "${WARNING} ${GREEN}$CONF${PLAIN} is ${RED}NOT${PLAIN} found"
    exit 1
fi

check_running() {
    if [ -r $PID_FILE ]; then
        read PID < $PID_FILE
        if [ -d "/proc/$PID" ]; then
            return 0
        else
            rm -f $PID_FILE
            return 1
        fi
    else
        return 2
    fi
}

do_start() {
    # Modify the file descriptor limit
    ulimit -n 51200
    # Enable UDP relay and TCP Fastopen
    local DAEMON_ARGS="-u --fast-open"
    # Check status
    if check_running; then
        echo -e "${RUNNING} $NAME (PID: ${BLUE} $PID ${PLAIN}) is already running..."
        return 0
    fi
    $DAEMON -c $CONF $DAEMON_ARGS -f $PID_FILE
    if check_running; then
        echo -e "${DONE}"
        TEMP_ACTTIME=$(date "+%a %Y-%m-%d %H:%M:%S %Z")
        echo $TEMP_ACTTIME > /tmp/time.log
    else
        echo -e "${FAIL}"
        RETVAL=1
    fi
}

do_stop() {
    if check_running; then
        kill -9 $PID
        rm -f $PID_FILE
        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
            echo -e "${DONE}"
            TEMP_ACTTIME=$(date "+%a %Y-%m-%d %H:%M:%S %Z")
            echo $TEMP_ACTTIME > /tmp/time.log
        else
            echo -e "${FAIL}"
        fi
    else
        echo -e "${WARNING} $NAME is stopped"
        RETVAL=1
    fi
}

do_status()
{
    check_running
    if [ $? -eq 0 ]; then
        local TEMP_ACTTIME=$(cat /tmp/time.log)
        local TEMP_RUNTIME=$(ps -eo pid,etime | grep $PID | awk  '{print $2}')
        echo -e "${GREEN}●${PLAIN} shadowsocks-libev.service - Shadowsocks-libev Default Server Service"
        echo -e "   Loaded: loaded (/etc/init.d/shadowsocks-libev; enabled; vendor preset: enabled)"
        echo -e "   Active: ${GREEN}active (running)${PLAIN} since $TEMP_ACTTIME; $TEMP_RUNTIME ago"
        echo -e "     Docs: man:shadowsocks-libev(8)"
        echo -e " Main PID: ${BLUE}$PID${PLAIN} (ss-server)"
        echo -e "    Tasks: 2 (limit: 4915)"
        echo -e "   CGroup: /system.slice/shadowsocks-libev.service"
        echo -e "           ├─ $DAEMON -c $CONF $DAEMON_ARGS"
        echo -e "           └─ $BIN"
    else
        local TEMP_ACTTIME=$(cat /tmp/time.log)
        echo -e "${RED}●${PLAIN} shadowsocks-libev.service - Shadowsocks-libev Default Server Service"
        echo -e "   Loaded: loaded (/etc/init.d/shadowsocks-libev; enabled; vendor preset: enabled)"
        echo -e "   Active: ${RED}inactive (dead)${PLAIN} since $TEMP_ACTTIME"
        echo -e "     Docs: man:shadowsocks-libev(8)"
        echo -e " Main PID: None (code=exited, status=0/SUCCESS)"
        RETVAL=1
    fi
}

case "$1" in
    start)
        do_start
        exit 0
    ;;
    stop)
        do_stop
        exit 0
    ;;
    reload|restart|force-reload)
        do_stop
        sleep 3
        do_start
        exit 0
    ;;
    status)
        do_status
        exit 0
    ;;
    *)
        echo "Usage: $0 {start|stop|reload|status}"
        RETVAL=1
    ;;
esac

exit $RETVAL
